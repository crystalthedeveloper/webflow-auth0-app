{"mappings":"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","sources":["pages/api/deleteUser.js"],"sourcesContent":["const express = require('express');\nconst { createProxyMiddleware } = require('http-proxy-middleware');\nconst dotenv = require('dotenv');\nconst cors = require('cors');\nimport('node-fetch').then(fetch => {\n  // Now you can use fetch here\n}).catch(err => {\n  console.error('Failed to import node-fetch:', err);\n});\n\ndotenv.config();\n\nconst app = express();\n\n// CORS middleware\napp.use(cors({\n  origin: 'https://firststep-46e83b.webflow.io', // Allow only the Webflow origin\n  methods: 'GET, POST, PUT, DELETE, OPTIONS',\n  allowedHeaders: 'Content-Type, Authorization'\n}));\n\n// Handle preflight requests\napp.options('*', cors());\n\n// Body parsing middleware\napp.use(express.json());\n\n// POST route for updating user quiz completion count\napp.post('/api/updateUser', async (req, res) => {\n  const { email, newQuizCompletionCount } = req.body;\n\n  try {\n    const response = await fetch(`https://api.webflow.com/v2/sites/${process.env.WEBFLOW_SITE_ID}/users/${email}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${process.env.WEBFLOW_API_TOKEN}`,\n      },\n      body: JSON.stringify({ 'quiz-completion-count': newQuizCompletionCount }),\n    });\n\n    const json = await response.json();\n\n    if (response.ok) {\n      res.status(200).json({ message: `Webflow user account updated successfully for ${email}`, data: json });\n    } else {\n      res.status(400).json({ error: 'Failed to update Webflow user account', data: json });\n    }\n  } catch (error) {\n    console.error('Error updating Webflow user account:', error);\n    res.status(500).json({ error: 'Internal Server Error' });\n  }\n});\n\n// DELETE route for deleting user account\napp.delete('/api/deleteUser', async (req, res) => {\n  const { email } = req.body;\n\n  try {\n    const response = await fetch(`https://api.webflow.com/v2/sites/${process.env.WEBFLOW_SITE_ID}/users/${email}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${process.env.WEBFLOW_API_TOKEN}`,\n      },\n    });\n\n    const json = await response.json();\n\n    if (response.ok) {\n      res.status(200).json({ message: `Webflow user account deleted successfully for ${email}`, data: json });\n    } else {\n      res.status(400).json({ error: 'Failed to delete Webflow user account', data: json });\n    }\n  } catch (error) {\n    console.error('Error deleting Webflow user account:', error);\n    res.status(500).json({ error: 'Internal Server Error' });\n  }\n});\n\n// Proxy middleware options\nconst options = {\n  target: 'https://api.webflow.com', // target host\n  changeOrigin: true, // needed for virtual hosted sites\n  pathRewrite: {\n    '^/api': '', // remove base path\n  },\n  onProxyReq: (proxyReq, req, res) => {\n    // Debug: Log the target and headers to verify\n    console.log(`Proxying request to: ${options.target}`);\n    console.log('Request headers:', req.headers);\n    proxyReq.setHeader('Authorization', `Bearer ${process.env.WEBFLOW_API_TOKEN}`);\n  },\n  onProxyRes: (proxyRes, req, res) => {\n    // Debug: Log the response headers\n    console.log('Response headers:', proxyRes.headers);\n  },\n};\n\n// Debug: Log the entire options object\nconsole.log('Proxy options:', options);\n\n// Create the proxy\nconst apiProxy = createProxyMiddleware(options);\n\n// Use the proxy middleware\napp.use('/api', apiProxy);\n\nconst PORT = process.env.PORT || 1234;\napp.listen(PORT, () => {\n  console.log(`Proxy server is running on port ${PORT}`);\n});\n"],"names":[],"version":3,"file":"index.js.map"}