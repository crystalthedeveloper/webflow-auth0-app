{"mappings":";;;;;;AAAA,YAAY;;;;AAGZ,+CAAqB,IAAI,CAAC,CAAA;AACxB,6BAA6B;AAC/B,GAAG,KAAK,CAAC,CAAA;IACP,QAAQ,KAAK,CAAC,gCAAgC;AAChD;;;AAIA;AAEA,MAAM,4BAAM;AACZ,0BAAI,GAAG,CAAC,eAAQ,IAAI;AACpB,0BAAI,GAAG,CAAC,YAAK;IACX,QAAQ;IACR,SAAS;QAAC;QAAO;QAAQ;QAAU;KAAU;IAC7C,gBAAgB;QAAC;QAAgB;KAAgB;AACnD;AAEA,mCAAoB;IAClB,YAAY,gCAAiB,IAAI,CAAC;QAChC,SAAS;QACT,WAAW;QACX,YAAY,usDAAiC,OAAO,CAAC,QAAQ;IAC/D;AACF;AAEA,0BAAI,MAAM,CAAC,eAAe,OAAO,KAAK;IACpC,MAAM,SAAE,KAAK,EAAE,GAAG,IAAI,IAAI;IAE1B,IAAI,CAAC,OACH,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAAE,OAAO;IAAoB;IAG3D,IAAI;QACF,MAAM,OAAO,MAAM,4BAAa,cAAc,CAAC;QAC/C,MAAM,4BAAa,UAAU,CAAC,KAAK,GAAG;QAEtC,MAAM,MAAM,CAAC,iCAAiC,6BAA8B,OAAO,EAAE,KAAK,GAAG,CAAC,CAAC;QAC/F,MAAM,UAAU;YACd,QAAQ;YACR,SAAS;gBACP,iBAAiB,CAAC,OAAO,qEAAgC,CAAC;gBAC1D,UAAU;YACZ;QACF;QAEA,MAAM,WAAW,MAAM,MAAM,KAAK;QAElC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,OAAO,IAAI,MAAM,CAAC,SAAS,MAAM,EAAE,IAAI,CAAC;gBAAE,OAAO;YAAU;QAC7D;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,IAAI,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM;QAAK;IAC9C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAwB;IAC/D;AACF;AAEA,MAAM;AACN,0BAAI,MAAM,CAAC,4BAAM;IACf,QAAQ,GAAG,CAAC,CAAC,0BAA0B,EAAE,2BAAK,CAAC;AACjD","sources":["app.js"],"sourcesContent":["// server.js\nconst express = require('express');\nconst cors = require('cors');\nimport('node-fetch').then(fetch => {\n  // Now you can use fetch here\n}).catch(err => {\n  console.error('Failed to import node-fetch:', err);\n});\nconst admin = require('firebase-admin');\nconst dotenv = require('dotenv');\n\ndotenv.config();\n\nconst app = express();\napp.use(express.json());\napp.use(cors({\n  origin: 'https://firststep-46e83b.webflow.io',\n  methods: ['GET', 'POST', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization']\n}));\n\nadmin.initializeApp({\n  credential: admin.credential.cert({\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n    privateKey: process.env.FIREBASE_PRIVATE_KEY.replace(/\\\\n/g, '\\n')\n  })\n});\n\napp.delete('/deleteUser', async (req, res) => {\n  const { email } = req.body;\n\n  if (!email) {\n    return res.status(400).json({ error: 'Email is required' });\n  }\n\n  try {\n    const user = await admin.auth().getUserByEmail(email);\n    await admin.auth().deleteUser(user.uid);\n\n    const url = `https://api.webflow.com/v2/sites/${process.env.WEBFLOW_SITE_ID}/users/${user.uid}`;\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${process.env.WEBFLOW_API_TOKEN}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    const response = await fetch(url, options);\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      return res.status(response.status).json({ error: errorData });\n    }\n\n    const json = await response.json();\n    return res.json({ success: true, data: json });\n  } catch (error) {\n    console.error('Error deleting user accounts:', error);\n    return res.status(500).json({ error: 'Internal Server Error' });\n  }\n});\n\nconst PORT = process.env.PORT || 1234;\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\n"],"names":[],"version":3,"file":"index.js.map"}